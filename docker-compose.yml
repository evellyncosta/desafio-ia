services:
  n8n:
    image: 'n8nio/n8n:1.112.4'
    command: start
    restart: always
    volumes:
      - 'n8n-data:/home/node/.n8n'
    environment:
      - 'N8N_EDITOR_BASE_URL=${SERVICE_URL_N8N}'
      - N8N_HOST=0.0.0.0
      - 'WEBHOOK_URL=${SERVICE_URL_N8N}'
      - N8N_PORT=5678
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - TZ=America/Sao_Paulo
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgresql
      - DB_POSTGRESDB_PORT=5432
      - 'DB_POSTGRESDB_USER=${SERVICE_USER_POSTGRES}'
      - 'DB_POSTGRESDB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
      - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}'
      - DB_POSTGRESDB_SCHEMA=public
      - EXECUTIONS_MODE=queue
      - 'N8N_ENCRYPTION_KEY=${SERVICE_BASE64_N8N}'
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - 'QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}'
      - N8N_LOG_LEVEL=debug
      - 'NODE_FUNCTION_ALLOW_EXTERNAL=*'
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_PROXY_HOPS=1
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - wget
        - '--no-verbose'
        - '--tries=1'
        - '--spider'
        - 'http://localhost:5678/healthz'
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
  n8n_worker:
    image: 'n8nio/n8n:1.112.4'
    command: worker
    restart: always
    volumes:
      - 'n8n-data:/home/node/.n8n'
    environment:
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - TZ=America/Sao_Paulo
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgresql
      - DB_POSTGRESDB_PORT=5432
      - 'DB_POSTGRESDB_USER=${SERVICE_USER_POSTGRES}'
      - 'DB_POSTGRESDB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
      - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}'
      - DB_POSTGRESDB_SCHEMA=public
      - EXECUTIONS_MODE=queue
      - 'N8N_ENCRYPTION_KEY=${SERVICE_BASE64_N8N}'
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - 'QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}'
      - N8N_LOG_LEVEL=info
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - 'NODE_FUNCTION_ALLOW_EXTERNAL=*'
      - N8N_PROXY_HOPS=1
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - sh
        - '-c'
        - "pgrep -f 'worker' || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
  n8n_webhook:
    image: 'n8nio/n8n:1.112.4'
    command: webhook
    restart: always
    volumes:
      - 'n8n-data:/home/node/.n8n'
    environment:
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - TZ=America/Sao_Paulo
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgresql
      - DB_POSTGRESDB_PORT=5432
      - 'DB_POSTGRESDB_USER=${SERVICE_USER_POSTGRES}'
      - 'DB_POSTGRESDB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
      - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}'
      - DB_POSTGRESDB_SCHEMA=public
      - EXECUTIONS_MODE=queue
      - 'N8N_ENCRYPTION_KEY=${SERVICE_BASE64_N8N}'
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - 'QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}'
      - N8N_LOG_LEVEL=info
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - 'NODE_FUNCTION_ALLOW_EXTERNAL=*'
      - N8N_PROXY_HOPS=1
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - sh
        - '-c'
        - "pgrep -f 'webhook' || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
  postgresql:
    image: 'ankane/pgvector:v0.5.0'
    restart: always
    volumes:
      - 'postgresql-data:/var/lib/postgresql/data'
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB:-n8n}'
      - 'POSTGRES_USER=${SERVICE_USER_POSTGRES}'
      - 'POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  redis:
    image: 'redis:alpine'
    restart: always
    command:
      - redis-server
      - '--requirepass'
      - '${REDIS_PASSWORD}'
    volumes:
      - 'redis-data:/data'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - '-a'
        - '${REDIS_PASSWORD}'
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  evolution-api:
    image: 'atendai/evolution-api:v2.2.3'
    volumes:
      - 'evolution-data:/lab_evolution/instances'
    restart: always
    environment:
      - SERVICE_FQDN_N8N_8080
      - 'SERVER_URL=${SERVICE_FQDN_EVOLUTION}'
      - 'AUTHENTICATION_API_KEY=${SERVICE_PASSWORD_EVOLUTION}'
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql
      - 'DATABASE_CONNECTION_URI=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgresql:5432/${POSTGRES_DB:-evolution}?schema=public'
      - DATABASE_CONNECTION_CLIENT_NAME=evolution_exchange
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_SAVE_DATA_NEW_MESSAGE=true
      - DATABASE_SAVE_MESSAGE_UPDATE=true
      - DATABASE_SAVE_DATA_CONTACTS=true
      - DATABASE_SAVE_DATA_CHATS=true
      - DATABASE_SAVE_DATA_LABELS=true
      - DATABASE_SAVE_DATA_HISTORIC=true
      - 'CONFIG_SESSION_PHONE_VERSION=${CONFIG_SESSION_PHONE_VERSION:-2.3000.1026231250}'
      - CACHE_REDIS_ENABLED=true
      - 'CACHE_REDIS_URI=redis://redis:6379/0'
      - CACHE_REDIS_PREFIX_KEY=evolution
      - CACHE_REDIS_SAVE_INSTANCES=false
      - CACHE_LOCAL_ENABLED=false
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - wget
        - '--no-verbose'
        - '--tries=1'
        - '--spider'
        - 'http://localhost:8080/'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
volumes:
  n8n-data:
    driver: local
  postgresql-data:
    driver: local
  redis-data:
    driver: local
  evolution-data:
    driver: local
